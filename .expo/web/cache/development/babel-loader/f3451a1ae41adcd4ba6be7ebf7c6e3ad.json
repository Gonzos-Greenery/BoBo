{"ast":null,"code":"export default function debounce(func, duration) {\n  var timeout;\n  return function () {\n    if (!timeout) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      func.apply(this, args);\n      timeout = setTimeout(function () {\n        timeout = undefined;\n      }, duration);\n    }\n  };\n}","map":{"version":3,"sources":["debounce.tsx"],"names":["args","func","timeout","setTimeout"],"mappings":"AAAA,eAAe,SAAA,QAAA,CAAA,IAAA,EAAA,QAAA,EAGV;EACH,IAAA,OAAA;EAEA,OAAO,YAA8B;IACnC,IAAI,CAAJ,OAAA,EAAc;MAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EADeA,IACf,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QADeA,IACf,CAAA,IAAA,CADeA,GACf,SAAA,CAAA,IAAA,CADeA;MACf;;MAEZC,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EAAAA,IAAAA;MAEAC,OAAO,GAAGC,UAAU,CAAC,YAAM;QACzBD,OAAO,GAAPA,SAAAA;MADkB,CAAA,EAApBA,QAAoB,CAApBA;IAGD;EARH,CAAA;AAUD","sourcesContent":["export default function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  duration: number\n): T {\n  let timeout: NodeJS.Timeout | number | undefined;\n\n  return function (this: any, ...args) {\n    if (!timeout) {\n      // eslint-disable-next-line babel/no-invalid-this\n      func.apply(this, args);\n\n      timeout = setTimeout(() => {\n        timeout = undefined;\n      }, duration);\n    }\n  } as T;\n}\n"]},"metadata":{},"sourceType":"module"}